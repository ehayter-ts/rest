{
  "swagger": "2.0",
  "info": {
    "description": "API's for TurnQuest Application",
    "version": "1.0",
    "title": "TurnQuest API's",
    "termsOfService": "1.0",
    "contact": {
      "name": "TA",
      "url": "www.turnkeyafrica.com",
      "email": "support@turnkeyafrica.com"
    },
    "license": {
      "name": "License of API",
      "url": "API license URL"
    }
  },
  "host": "172.20.90.131:9092",
  "basePath": "/",
  "tags": [
    {
      "name": "Account Types",
      "description": "REST API for Account Types"
    },
    {
      "name": "Agents",
      "description": "REST API for Agents"
    },
    {
      "name": "Approvals",
      "description": "Approval Controller"
    },
    {
      "name": "Binders",
      "description": "REST API for Binders"
    },
    {
      "name": "Branches",
      "description": "REST API for Branches"
    },
    {
      "name": "Brokerage intergration",
      "description": "Brk Transfer Controller"
    },
    {
      "name": "Claims",
      "description": "REST API for Claims"
    },
    {
      "name": "Client Operations",
      "description": "Operations pertaining to client management"
    },
    {
      "name": "Client Types",
      "description": "REST API for Client Types"
    },
    {
      "name": "Countries",
      "description": "REST API for Countries"
    },
    {
      "name": "Cover Types",
      "description": "REST API for Cover Types"
    },
    {
      "name": "Currencies",
      "description": "REST API for Currencies"
    },
    {
      "name": "Do-cheque",
      "description": "Cheque Controller"
    },
    {
      "name": "Do-journal",
      "description": "Journal Controller"
    },
    {
      "name": "Do-receipt",
      "description": "REST API for Receipting"
    },
    {
      "name": "Payment",
      "description": "REST API for Payment"
    },
    {
      "name": "Perils",
      "description": "REST API for Perils"
    },
    {
      "name": "Policies",
      "description": "REST API for Policies"
    },
    {
      "name": "Policy Endorsements",
      "description": "REST API for Endorsements"
    },
    {
      "name": "Product Sub Classes",
      "description": "REST API for Product Sub Classes"
    },
    {
      "name": "Products",
      "description": "REST API for Products"
    },
    {
      "name": "Prospects",
      "description": "REST API for Prospects"
    },
    {
      "name": "Quotation Risks",
      "description": "REST API for Quotation Risks"
    },
    {
      "name": "Quotations",
      "description": "REST API for Quotations"
    },
    {
      "name": "QuotationsV2",
      "description": "Quotations V 2 Controller"
    },
    {
      "name": "Regions",
      "description": "REST API for Regions"
    },
    {
      "name": "Reinsurance",
      "description": "REST API for Reinsurance"
    },
    {
      "name": "Reports",
      "description": "REST API for Reports"
    },
    {
      "name": "Sections",
      "description": "REST API for Sections"
    },
    {
      "name": "Setups",
      "description": "REST API for Setups"
    },
    {
      "name": "Sub Agents",
      "description": "REST API for Sub Agents"
    },
    {
      "name": "Sub Classes",
      "description": "REST API for Sub Classes"
    },
    {
      "name": "Sub Classes Cover Types",
      "description": "REST API for Sub Classes Cover Types"
    },
    {
      "name": "System Users Management",
      "description": "Operations pertaining to Users"
    },
    {
      "name": "Towns",
      "description": "REST API for Towns"
    },
    {
      "name": "Uploads",
      "description": "REST API for Uploads"
    },
    {
      "name": "Utilities",
      "description": "REST API for Utilities"
    },
    {
      "name": "admin-controller",
      "description": "Admin Controller"
    },
    {
      "name": "authorization-endpoint",
      "description": "Authorization Endpoint"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    },
    {
      "name": "check-token-endpoint",
      "description": "Check Token Endpoint"
    },
    {
      "name": "client-integration-controller",
      "description": "Operations pertaining to client management."
    },
    {
      "name": "token-endpoint",
      "description": "Token Endpoint"
    },
    {
      "name": "whitelabel-approval-endpoint",
      "description": "Whitelabel Approval Endpoint"
    },
    {
      "name": "whitelabel-error-endpoint",
      "description": "Whitelabel Error Endpoint"
    }
  ],
  "paths": {
    "/account-types/v1": {
      "get": {
        "tags": [
          "Account Types"
        ],
        "summary": "getAllAccountTypes",
        "operationId": "getAllAccountTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountTypeDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/account-types/v1/{code}": {
      "get": {
        "tags": [
          "Account Types"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountTypeDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/admin/add": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "addUser",
        "operationId": "addUserUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/admin/save": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "saveUser",
        "operationId": "saveUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "users",
        "operationId": "usersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/agents/v1": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "getAllAgents",
        "operationId": "getAllAgentsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Agent "
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/agents/v1/agent": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "findAgent",
        "operationId": "findAgentUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": false,
            "type": "number"
          },
          {
            "name": "shortCode",
            "in": "query",
            "description": "shortCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Agent "
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/agents/v1/createUpdateAgent": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "createAgent",
        "operationId": "createAgentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "agentFormDTO",
            "description": "agentFormDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agent "
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/agents/v1/{code}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Agent "
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Agents"
        ],
        "summary": "deleteAgent",
        "operationId": "deleteAgentUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/agents/v2/intermediary": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get Agent details based on code or short description",
        "operationId": "findIntermediaryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": false,
            "type": "number"
          },
          {
            "name": "shortCode",
            "in": "query",
            "description": "shortCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/AgentRequest"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/agents/v2/intermediary-addition-updation": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "Create and Update Intermediary",
        "operationId": "createUpdateAgentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "agentRequest",
            "description": "agentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/Api Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/approval/v1/authReject": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "summary": "authReject",
        "operationId": "authRejectUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authRej",
            "in": "query",
            "description": "authRej",
            "required": true,
            "type": "string"
          },
          {
            "name": "ticketNo",
            "in": "query",
            "description": "ticketNo",
            "required": true,
            "type": "number"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": true,
            "type": "string"
          },
          {
            "name": "remarks",
            "in": "query",
            "description": "remarks",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/approval/v1/findTransDetails": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "summary": "findTransDetails",
        "operationId": "findTransDetailsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ticketNo",
            "in": "query",
            "description": "ticketNo",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/approval/v1/findTransactions": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "summary": "findTransactions",
        "operationId": "findTransactionsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/binders/v1": {
      "get": {
        "tags": [
          "Binders"
        ],
        "summary": "getAllBinders",
        "operationId": "getAllBindersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BinderDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/binders/v1/{code}": {
      "get": {
        "tags": [
          "Binders"
        ],
        "summary": "findBinderByCode",
        "operationId": "findBinderByCodeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BinderDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/branches/v1": {
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "getAllBranches",
        "operationId": "getAllBranchesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BranchDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/branches/v1/{code}": {
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeferredResult«ResponseEntity«BranchDTO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/brk/interface/v1/brkUwCancelServ": {
      "get": {
        "tags": [
          "Brokerage intergration"
        ],
        "summary": "brkUwCancelServ",
        "operationId": "brkUwCancelServUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "transCode",
            "in": "query",
            "description": "transCode",
            "required": true,
            "type": "number"
          },
          {
            "name": "user",
            "in": "query",
            "description": "user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/brk/interface/v1/brkUwTransfer": {
      "post": {
        "tags": [
          "Brokerage intergration"
        ],
        "summary": "brkUwTransfer",
        "operationId": "brkUwTransferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "batchNo",
            "in": "query",
            "description": "batchNo",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/brk/interface/v1/brkUwTransferServ": {
      "post": {
        "tags": [
          "Brokerage intergration"
        ],
        "summary": "brkUwTransferServ",
        "operationId": "brkUwTransferServUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "brkPolicyInfoDTO",
            "description": "brkPolicyInfoDTO",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/brk/interface/v1/brkUwTransferServResponse": {
      "post": {
        "tags": [
          "Brokerage intergration"
        ],
        "summary": "brkUwTransferServ",
        "operationId": "brkUwTransferServUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "brkResponseFrmDTO",
            "description": "brkResponseFrmDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrkResponseFrmDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/cheque/v1/approval": {
      "post": {
        "tags": [
          "Do-cheque"
        ],
        "summary": "approval",
        "operationId": "approvalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "approvalDTO",
            "description": "approvalDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/cheque/v1/findAuthRequisitions": {
      "post": {
        "tags": [
          "Do-cheque"
        ],
        "summary": "findAuthRequisitions",
        "operationId": "findAuthRequisitionsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requisitionSearchDTO",
            "description": "requisitionSearchDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequisitionSearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/claims/v1": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "createClaim",
        "operationId": "createClaimUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "claimFormDTO",
            "description": "claimFormDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClaimFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/claims/v1/claimDetails": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "getClaimDetails",
        "operationId": "getClaimDetailsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "claimNumber",
            "in": "query",
            "description": "claimNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClaimDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/claims/v1/payments": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "getClaimPayments",
        "operationId": "getClaimPaymentsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "claimNumber",
            "in": "query",
            "description": "claimNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClaimPaymentDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/claims/v2/claimDetails": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "claimDetails",
        "operationId": "claimDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchDTO",
            "description": "searchDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/client-types/v1": {
      "get": {
        "tags": [
          "Client Types"
        ],
        "summary": "getAllClientTypes",
        "operationId": "getAllClientTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientTypeDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/client-types/v1/{code}": {
      "get": {
        "tags": [
          "Client Types"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientTypeDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/clients/findClientBy": {
      "post": {
        "tags": [
          "client-integration-controller"
        ],
        "summary": "Get client details",
        "operationId": "findClientByUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clientSearchDto",
            "description": "clientSearchDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientSearchDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/clients/saveUpdateClient": {
      "post": {
        "tags": [
          "client-integration-controller"
        ],
        "summary": "Create and Update Client",
        "operationId": "saveUpdateClientUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          {
            "name": "agnCode",
            "in": "query",
            "description": "agnCode",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/Api Response format"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/clients/titles": {
      "get": {
        "tags": [
          "client-integration-controller"
        ],
        "summary": "Get client titles",
        "operationId": "getClientTitlesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gender",
            "in": "query",
            "description": "gender",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/Client titles"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/clients/v1": {
      "get": {
        "tags": [
          "Client Operations"
        ],
        "summary": "getAllClients",
        "operationId": "getAllClientsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Client Operations"
        ],
        "summary": "createClient",
        "operationId": "createClientUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clientDTO",
            "description": "clientDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/clients/v1/searchClient": {
      "post": {
        "tags": [
          "Client Operations"
        ],
        "summary": "searchClient",
        "operationId": "searchClientUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clientSearchDTO",
            "description": "clientSearchDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientSearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/clients/v1/updateClient": {
      "post": {
        "tags": [
          "Client Operations"
        ],
        "summary": "updateClient",
        "operationId": "updateClientUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clientDTO",
            "description": "clientDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/clients/v1/{code}": {
      "get": {
        "tags": [
          "Client Operations"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClientDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/countries/v1": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "getAllCountries",
        "operationId": "getAllCountriesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CountryDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/countries/v1/{code}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CountryDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/cover-types/v1": {
      "get": {
        "tags": [
          "Cover Types"
        ],
        "summary": "getAllCoverTypes",
        "operationId": "getAllCoverTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CoverTypeDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/cover-types/v1/subClassCoverTypes": {
      "get": {
        "tags": [
          "Cover Types"
        ],
        "summary": "subClassCoverTypes",
        "operationId": "subClassCoverTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subClassCode",
            "in": "query",
            "description": "subClassCode",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/cover-types/v1/{code}": {
      "get": {
        "tags": [
          "Cover Types"
        ],
        "summary": "findCoverTypeByCode",
        "operationId": "findCoverTypeByCodeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoverTypeDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/currencies/v1": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "getAllCurrencies",
        "operationId": "getAllCurrenciesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrencyDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/currencies/v1/{code}": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_6",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CurrencyDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/endorsements/4.0/policyRenewal": {
      "get": {
        "tags": [
          "Policy Endorsements"
        ],
        "summary": "policyRenewal",
        "operationId": "policyRenewalUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "batchNumber",
            "in": "query",
            "description": "batchNumber",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/endorsements/v1/cancellation": {
      "get": {
        "tags": [
          "Policy Endorsements"
        ],
        "summary": "cancellation",
        "operationId": "cancellationUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/endorsements/v1/endorsement": {
      "post": {
        "tags": [
          "Policy Endorsements"
        ],
        "summary": "policyEndorsement",
        "operationId": "policyEndorsementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyEndorsementFormDTO",
            "description": "policyEndorsementFormDTO",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/endorsements/v1/renewal": {
      "get": {
        "tags": [
          "Policy Endorsements"
        ],
        "summary": "renewal",
        "operationId": "renewalUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/endorsements/v1/renewalEnquiry": {
      "post": {
        "tags": [
          "Policy Endorsements"
        ],
        "summary": "renewalEnquiry",
        "operationId": "renewalEnquiryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchDTO",
            "description": "searchDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/endorsements/v1/renewalPolicy": {
      "post": {
        "tags": [
          "Policy Endorsements"
        ],
        "summary": "renewalPolicy",
        "operationId": "renewalPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "policyEndorsementFormDTO",
            "description": "policyEndorsementFormDTO",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingGET",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingDELETE",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/journal/v1/authJournal": {
      "post": {
        "tags": [
          "Do-journal"
        ],
        "summary": "authJournal",
        "operationId": "authJournalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "journalApprovalDTO",
            "description": "journalApprovalDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalApprovalDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/journal/v1/findAuthJournal": {
      "post": {
        "tags": [
          "Do-journal"
        ],
        "summary": "findAuthJournal",
        "operationId": "findAuthJournalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "journalSearchDTO",
            "description": "journalSearchDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalSearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/journal/v1/findPostJournal": {
      "post": {
        "tags": [
          "Do-journal"
        ],
        "summary": "findPostJournal",
        "operationId": "findPostJournalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "journalSearchDTO",
            "description": "journalSearchDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalSearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/journal/v1/postJournal": {
      "post": {
        "tags": [
          "Do-journal"
        ],
        "summary": "postJournal",
        "operationId": "postJournalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "journalApprovalDTO",
            "description": "journalApprovalDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalApprovalDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/oauth/authorize": {
      "get": {
        "tags": [
          "authorization-endpoint"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          },
          {
            "name": "parameters",
            "in": "query",
            "description": "parameters",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "head": {
        "tags": [
          "authorization-endpoint"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          },
          {
            "name": "parameters",
            "in": "query",
            "description": "parameters",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "authorization-endpoint"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          },
          {
            "name": "parameters",
            "in": "query",
            "description": "parameters",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "authorization-endpoint"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          },
          {
            "name": "parameters",
            "in": "query",
            "description": "parameters",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "authorization-endpoint"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          },
          {
            "name": "parameters",
            "in": "query",
            "description": "parameters",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "options": {
        "tags": [
          "authorization-endpoint"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          },
          {
            "name": "parameters",
            "in": "query",
            "description": "parameters",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "authorization-endpoint"
        ],
        "summary": "authorize",
        "operationId": "authorizeUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          },
          {
            "name": "parameters",
            "in": "query",
            "description": "parameters",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/oauth/check_token": {
      "get": {
        "tags": [
          "check-token-endpoint"
        ],
        "summary": "checkToken",
        "operationId": "checkTokenUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "head": {
        "tags": [
          "check-token-endpoint"
        ],
        "summary": "checkToken",
        "operationId": "checkTokenUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "check-token-endpoint"
        ],
        "summary": "checkToken",
        "operationId": "checkTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "check-token-endpoint"
        ],
        "summary": "checkToken",
        "operationId": "checkTokenUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "check-token-endpoint"
        ],
        "summary": "checkToken",
        "operationId": "checkTokenUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "options": {
        "tags": [
          "check-token-endpoint"
        ],
        "summary": "checkToken",
        "operationId": "checkTokenUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "check-token-endpoint"
        ],
        "summary": "checkToken",
        "operationId": "checkTokenUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/oauth/confirm_access": {
      "get": {
        "tags": [
          "whitelabel-approval-endpoint"
        ],
        "summary": "getAccessConfirmation",
        "operationId": "getAccessConfirmationUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "head": {
        "tags": [
          "whitelabel-approval-endpoint"
        ],
        "summary": "getAccessConfirmation",
        "operationId": "getAccessConfirmationUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "whitelabel-approval-endpoint"
        ],
        "summary": "getAccessConfirmation",
        "operationId": "getAccessConfirmationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "whitelabel-approval-endpoint"
        ],
        "summary": "getAccessConfirmation",
        "operationId": "getAccessConfirmationUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "whitelabel-approval-endpoint"
        ],
        "summary": "getAccessConfirmation",
        "operationId": "getAccessConfirmationUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "options": {
        "tags": [
          "whitelabel-approval-endpoint"
        ],
        "summary": "getAccessConfirmation",
        "operationId": "getAccessConfirmationUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "whitelabel-approval-endpoint"
        ],
        "summary": "getAccessConfirmation",
        "operationId": "getAccessConfirmationUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/oauth/error": {
      "get": {
        "tags": [
          "whitelabel-error-endpoint"
        ],
        "summary": "handleError",
        "operationId": "handleErrorUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "head": {
        "tags": [
          "whitelabel-error-endpoint"
        ],
        "summary": "handleError",
        "operationId": "handleErrorUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "whitelabel-error-endpoint"
        ],
        "summary": "handleError",
        "operationId": "handleErrorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "whitelabel-error-endpoint"
        ],
        "summary": "handleError",
        "operationId": "handleErrorUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "whitelabel-error-endpoint"
        ],
        "summary": "handleError",
        "operationId": "handleErrorUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "options": {
        "tags": [
          "whitelabel-error-endpoint"
        ],
        "summary": "handleError",
        "operationId": "handleErrorUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "whitelabel-error-endpoint"
        ],
        "summary": "handleError",
        "operationId": "handleErrorUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/oauth/token": {
      "get": {
        "tags": [
          "token-endpoint"
        ],
        "summary": "getAccessToken",
        "operationId": "getAccessTokenUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "query",
            "description": "parameters",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OAuth2AccessToken"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "token-endpoint"
        ],
        "summary": "postAccessToken",
        "operationId": "postAccessTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "query",
            "description": "parameters",
            "required": true,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OAuth2AccessToken"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/payment/v1/": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Make Payment",
        "operationId": "makePaymentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ipayment",
            "description": "ipayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/perils/v1": {
      "get": {
        "tags": [
          "Perils"
        ],
        "summary": "getAllPerils",
        "operationId": "getAllPerilsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PerilDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/perils/v1/{code}": {
      "get": {
        "tags": [
          "Perils"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_7",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerilDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/policies/v1": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getClientPolicies",
        "operationId": "getClientPoliciesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientCode",
            "in": "query",
            "description": "clientCode",
            "required": false,
            "type": "number"
          },
          {
            "name": "agentCode",
            "in": "query",
            "description": "agentCode",
            "required": false,
            "type": "number"
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode",
            "required": false,
            "type": "number"
          },
          {
            "name": "wef",
            "in": "query",
            "description": "wef",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "wet",
            "in": "query",
            "description": "wet",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "name": "riskId",
            "in": "query",
            "description": "riskId",
            "required": false,
            "type": "string"
          },
          {
            "name": "introCode",
            "in": "query",
            "description": "introCode",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientPolicyDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "generatePolicy",
        "operationId": "generatePolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "quotationFormDTO",
            "description": "quotationFormDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotationFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/policies/v1/authorisePolicy": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "authorisePolicy",
        "operationId": "authorisePolicyUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "batchNumber",
            "in": "query",
            "description": "batchNumber",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/policies/v1/policy-details": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getPolicyDetails",
        "operationId": "getPolicyDetailsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "policyNumber",
            "in": "query",
            "description": "policyNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeferredResult«ResponseEntity«List«PolicyDTO»»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/policies/v1/policyRiskPerils": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "policyRiskPerils",
        "operationId": "policyRiskPerilsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "batchNumber",
            "in": "query",
            "description": "batchNumber",
            "required": true,
            "type": "number"
          },
          {
            "name": "InsuredRiskCode",
            "in": "query",
            "description": "InsuredRiskCode",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyRiskPerilDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/policies/v1/transmital": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getTransmital",
        "operationId": "getTransmitalUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "policyNumber",
            "in": "query",
            "description": "policyNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GisTransmitalDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/policies/v1/{code}/endorsements": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getPolicyEndorsements",
        "operationId": "getPolicyEndorsementsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/policies/v1/{code}/insured-properties": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "getInsuredProperties",
        "operationId": "getInsuredPropertiesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyRiskDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/policies/v1/{policyBatchNo}/document": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Get the Policy Document object for the given policy",
        "operationId": "getPolicyDocumentUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "policyBatchNo",
            "in": "path",
            "description": "policyBatchNo",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the document",
            "schema": {
              "$ref": "#/definitions/Policy Document"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/product-sub-classes/v1": {
      "get": {
        "tags": [
          "Product Sub Classes"
        ],
        "summary": "getAllProducts",
        "operationId": "getAllProductsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductSubClassDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/product-sub-classes/v1/{code}": {
      "get": {
        "tags": [
          "Product Sub Classes"
        ],
        "summary": "findProductByCode",
        "operationId": "findProductByCodeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductSubClassDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/products/v1": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "getAllProducts",
        "operationId": "getAllProductsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/products/v1/{code}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "findProductByCode",
        "operationId": "findProductByCodeUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/prospects/v1/createUpdateProspect": {
      "post": {
        "tags": [
          "Prospects"
        ],
        "summary": "createUpdateProspect",
        "operationId": "createUpdateProspectUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "prospectDTO",
            "description": "prospectDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProspectDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/quotation-risks/v1": {
      "get": {
        "tags": [
          "Quotation Risks"
        ],
        "summary": "getAllQuotationsRisks",
        "operationId": "getAllQuotationsRisksUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuotationRiskDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/quotation-risks/v1/{code}": {
      "get": {
        "tags": [
          "Quotation Risks"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_8",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuotationRiskDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/quotations/v1": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "summary": "getAllQuotations",
        "operationId": "getAllQuotationsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«QuotationDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      },
      "post": {
        "tags": [
          "Quotations"
        ],
        "summary": "createQuotation",
        "operationId": "createQuotationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "quotationFormDTO",
            "description": "quotationFormDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotationFormDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/client-quotations": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "summary": "getClientQuotations",
        "operationId": "getClientQuotationsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientCode",
            "in": "query",
            "description": "clientCode",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/createQuot": {
      "post": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "createQuot",
        "operationId": "createQuotUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "quotationFormDTO",
            "description": "quotationFormDTO",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/loop/endorsement": {
      "post": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "policyEndorsement",
        "operationId": "policyEndorsementUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "loopQuotationOuterDTO",
            "description": "loopQuotationOuterDTO",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/loop/policy": {
      "post": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "createQuotPolicy",
        "operationId": "createQuotPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "loopQuotationOuterDTO",
            "description": "loopQuotationOuterDTO",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/test": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "summary": "getAllQuotationsTest",
        "operationId": "getAllQuotationsTestUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«QuotationDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/to-policies": {
      "post": {
        "tags": [
          "Quotations"
        ],
        "summary": "convertToPolicies",
        "operationId": "convertToPoliciesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "number"
          },
          {
            "name": "isCoinsurancePolicy",
            "in": "query",
            "description": "isCoinsurancePolicy",
            "required": false,
            "type": "string",
            "default": "N"
          },
          {
            "name": "isCoinsuranceLeader",
            "in": "query",
            "description": "isCoinsuranceLeader",
            "required": false,
            "type": "string",
            "default": "Y"
          },
          {
            "name": "coinsuranceGross",
            "in": "query",
            "description": "coinsuranceGross",
            "required": false,
            "type": "string",
            "default": "Y"
          },
          {
            "name": "coinsurancePercentage",
            "in": "query",
            "description": "coinsurancePercentage",
            "required": false,
            "type": "number"
          },
          {
            "name": "isPolicyRenewable",
            "in": "query",
            "description": "isPolicyRenewable",
            "required": false,
            "type": "string",
            "default": "Y"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/validRisk/{quotCode}": {
      "get": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "validRisk",
        "operationId": "validRiskUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "quotCode",
            "in": "path",
            "description": "quotCode",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/{code}": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_9",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuotationDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/{code}/quotation-risks": {
      "get": {
        "tags": [
          "Quotations"
        ],
        "summary": "findQuotationRisksByCode",
        "operationId": "findQuotationRisksByCodeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QuotationRiskDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v1/{prodCode}productRequestSample": {
      "get": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "productRequestSample",
        "operationId": "productRequestSampleUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "prodCode",
            "in": "path",
            "description": "prodCode",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/quotations/v2/client-quotations": {
      "get": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "Get client quotations",
        "operationId": "getClientQuotationsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientCode",
            "in": "query",
            "description": "clientCode",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/QuotationResponse"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/quotations/v2/quotation-conversion": {
      "post": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "convertToPolicies",
        "operationId": "convertToPoliciesUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "quotCode",
            "in": "query",
            "description": "quotCode",
            "required": true,
            "type": "number"
          },
          {
            "name": "isCoinsurancePolicy",
            "in": "query",
            "description": "isCoinsurancePolicy",
            "required": false,
            "type": "string",
            "default": "N"
          },
          {
            "name": "isCoinsuranceLeader",
            "in": "query",
            "description": "isCoinsuranceLeader",
            "required": false,
            "type": "string",
            "default": "Y"
          },
          {
            "name": "coinsuranceGross",
            "in": "query",
            "description": "coinsuranceGross",
            "required": false,
            "type": "string",
            "default": "Y"
          },
          {
            "name": "coinsurancePercentage",
            "in": "query",
            "description": "coinsurancePercentage",
            "required": false,
            "type": "number"
          },
          {
            "name": "isPolicyRenewable",
            "in": "query",
            "description": "isPolicyRenewable",
            "required": false,
            "type": "string",
            "default": "Y"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/Api Response«List«PolicyResponse»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/quotations/v2/quotations": {
      "get": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "Get all quotations",
        "operationId": "getAllQuotationsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/QuotationResponse"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/quotations/v2/quote-creation": {
      "post": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "Create quotation",
        "operationId": "createQuotionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "quotationFormDTO",
            "description": "quotationFormDTO",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/Api Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/quotations/v2/{quotCode}/quotations": {
      "get": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "Get quotations by code",
        "operationId": "findByCodeUsingGET_10",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "quotCode",
            "in": "path",
            "description": "quotCode",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/QuotationResponse"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/quotations/v2/{riskCode}/quotation-risk": {
      "get": {
        "tags": [
          "QuotationsV2"
        ],
        "summary": "Get quotation risks",
        "operationId": "findQuotationRisksByCodeUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "riskCode",
            "in": "path",
            "description": "riskCode",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the value",
            "schema": {
              "$ref": "#/definitions/QuotationRiskResponse"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/receipt/v1/cancelReceipt": {
      "post": {
        "tags": [
          "Do-receipt"
        ],
        "summary": "cancelReceipt",
        "operationId": "cancelReceiptUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cancelReceiptDTO",
            "description": "cancelReceiptDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelReceiptDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/receipt/v1/doreceipt": {
      "post": {
        "tags": [
          "Do-receipt"
        ],
        "summary": "receipt",
        "operationId": "receiptUsingPOST",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "xmlFile",
            "description": "xmlFile",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/receipt/v1/receiptMain/": {
      "post": {
        "tags": [
          "Do-receipt"
        ],
        "summary": "receiptMain",
        "operationId": "receiptMainUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "receiptDTO",
            "description": "receiptDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceiptDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/receipt/v1/validate": {
      "post": {
        "tags": [
          "Do-receipt"
        ],
        "summary": "validateReference",
        "operationId": "validateReferenceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "validatorDTO",
            "description": "validatorDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidatorDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/receipt/v2/doreceipt": {
      "post": {
        "tags": [
          "Do-receipt"
        ],
        "summary": "receiptV2",
        "operationId": "receiptV2UsingPOST",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "xmlFile",
            "description": "xmlFile",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/regions/v1": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "getAllRegions",
        "operationId": "getAllRegionsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegionDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/regions/v1/{code}": {
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_11",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegionDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/reinsurance/treaty-setups": {
      "get": {
        "tags": [
          "Reinsurance"
        ],
        "summary": "getTreatySetups",
        "operationId": "getTreatySetupsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "underwritingYear",
            "in": "query",
            "description": "underwritingYear",
            "required": false,
            "type": "number",
            "default": -1.0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TreatySetupDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/reinsurance/treaty-setups/old": {
      "get": {
        "tags": [
          "Reinsurance"
        ],
        "summary": "getSetup",
        "operationId": "getSetupUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OldTreatySetup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/reports/v1/generateReport": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "generateReport",
        "operationId": "generateReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "rpt",
            "description": "rpt",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/reports/v1/reportParams/{code}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "reportParams",
        "operationId": "reportParamsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/XMLParams"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/reports/v1/systemReports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "systemReports",
        "operationId": "systemReportsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "rptCode",
            "in": "query",
            "description": "rptCode",
            "required": false,
            "type": "number"
          },
          {
            "name": "rptSystem",
            "in": "query",
            "description": "rptSystem",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SystemReportDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/sections/v1": {
      "get": {
        "tags": [
          "Sections"
        ],
        "summary": "getAllSections",
        "operationId": "getAllSectionsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SectionDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/sections/v1/coverTypeSections": {
      "get": {
        "tags": [
          "Sections"
        ],
        "summary": "coverTypeSections",
        "operationId": "coverTypeSectionsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subclassCode",
            "in": "query",
            "description": "subclassCode",
            "required": true,
            "type": "number"
          },
          {
            "name": "covtCode",
            "in": "query",
            "description": "covtCode",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/setup/v1/introducer": {
      "get": {
        "tags": [
          "Setups"
        ],
        "summary": "introducer",
        "operationId": "introducerUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": false,
            "type": "number"
          },
          {
            "name": "shortCode",
            "in": "query",
            "description": "shortCode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/setup/v1/vehicleBodyTypes": {
      "get": {
        "tags": [
          "Setups"
        ],
        "summary": "vehicleBodyTypes",
        "operationId": "vehicleBodyTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«object»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/setup/v1/vehicleMake": {
      "get": {
        "tags": [
          "Setups"
        ],
        "summary": "vehicleMake",
        "operationId": "vehicleMakeUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«object»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/setup/v1/vehicleModel/{makeCode}": {
      "get": {
        "tags": [
          "Setups"
        ],
        "summary": "vehicleModel",
        "operationId": "vehicleModelUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "makeCode",
            "in": "path",
            "description": "makeCode",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«object»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/setup/v1/vehicleModelColor": {
      "get": {
        "tags": [
          "Setups"
        ],
        "summary": "vehicleModelColor",
        "operationId": "vehicleModelColorUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«object»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/sub-agents/v1": {
      "get": {
        "tags": [
          "Sub Agents"
        ],
        "summary": "getAllSubAgents",
        "operationId": "getAllSubAgentsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubAgentDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Sub Agents"
        ],
        "summary": "createSubAgent",
        "operationId": "createSubAgentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "subAgentDTO",
            "description": "subAgentDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubAgentDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubAgentDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/sub-agents/v1/{code}": {
      "get": {
        "tags": [
          "Sub Agents"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_12",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubAgentDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Sub Agents"
        ],
        "summary": "updateSubAgent",
        "operationId": "updateSubAgentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "subAgentDTO",
            "description": "subAgentDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubAgentDTO"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubAgentDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/sub-classes-cover-types/v1": {
      "get": {
        "tags": [
          "Sub Classes Cover Types"
        ],
        "summary": "getAllSubclassCoverTypes",
        "operationId": "getAllSubclassCoverTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubClassCoverTypeDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/sub-classes-cover-types/{code}": {
      "get": {
        "tags": [
          "Sub Classes Cover Types"
        ],
        "summary": "findSubclassCoverTypeByCode",
        "operationId": "findSubclassCoverTypeByCodeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubClassCoverTypeDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/sub-classes/v1": {
      "get": {
        "tags": [
          "Sub Classes"
        ],
        "summary": "getAllSubclasses",
        "operationId": "getAllSubclassesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubClassDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/sub-classes/v1/{code}/sub-class-section-perils": {
      "get": {
        "tags": [
          "Sub Classes"
        ],
        "summary": "findSubClassPerils",
        "operationId": "findSubClassPerilsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubClassSectionPerilDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/sub-classes/{code}": {
      "get": {
        "tags": [
          "Sub Classes"
        ],
        "summary": "findSubclassByCode",
        "operationId": "findSubclassByCodeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubClassDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/towns/v1": {
      "get": {
        "tags": [
          "Towns"
        ],
        "summary": "getAllTowns",
        "operationId": "getAllTownsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TownDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/towns/v1/{code}": {
      "get": {
        "tags": [
          "Towns"
        ],
        "summary": "findByCode",
        "operationId": "findByCodeUsingGET_13",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TownDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/uploads/v1": {
      "post": {
        "tags": [
          "Uploads"
        ],
        "summary": "createUpload",
        "operationId": "createUploadUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sourceType",
            "in": "query",
            "description": "sourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceReference",
            "in": "query",
            "description": "sourceReference",
            "required": true,
            "type": "number"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "System Users Management"
        ],
        "summary": "List all users",
        "description": "Get a list of all users within the system",
        "operationId": "getUsersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "System Users Management"
        ],
        "summary": "Create a user account.",
        "description": "Create an user account",
        "operationId": "saveUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User Details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the user",
            "schema": {
              "$ref": "#/definitions/User Details"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/users/{user_code}": {
      "get": {
        "tags": [
          "System Users Management"
        ],
        "summary": "Find user by user code",
        "description": "Get a user by supplying the user code",
        "operationId": "getUserByUserCodeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "user_code",
            "in": "path",
            "description": "user_code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user",
            "schema": {
              "$ref": "#/definitions/User Details"
            }
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "System Users Management"
        ],
        "summary": "Update a user account.",
        "description": "Update a user account by supplying the user code",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "user_code",
            "in": "path",
            "description": "user_code",
            "required": true,
            "type": "number"
          },
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User Details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated user",
            "schema": {
              "$ref": "#/definitions/User Details"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/users/{user_code}/activate": {
      "post": {
        "tags": [
          "System Users Management"
        ],
        "summary": "Activate a user account.",
        "description": "Activate a user account by supplying the user code",
        "operationId": "activateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "user_code",
            "in": "path",
            "description": "user_code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully activated user",
            "schema": {
              "$ref": "#/definitions/User Details"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/users/{user_code}/authorize": {
      "post": {
        "tags": [
          "System Users Management"
        ],
        "summary": "Authorize a user account.",
        "description": "Authorize a user account by supplying the user code",
        "operationId": "authorizeUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "user_code",
            "in": "path",
            "description": "user_code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully authorized user",
            "schema": {
              "$ref": "#/definitions/User Details"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/users/{user_code}/deactivate": {
      "post": {
        "tags": [
          "System Users Management"
        ],
        "summary": "Deactive a user account.",
        "description": "Deactive a user account by supplying the user code",
        "operationId": "deactivateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "user_code",
            "in": "path",
            "description": "user_code",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deactivated user",
            "schema": {
              "$ref": "#/definitions/User Details"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "You are not authorized to view the resource"
          },
          "403": {
            "description": "Accessing the resource you were trying to reach is forbidden"
          },
          "404": {
            "description": "The resource you were trying to reach is not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2schema": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/utility/v1/bCryptEncoder": {
      "get": {
        "tags": [
          "Utilities"
        ],
        "summary": "bCryptEncoder",
        "operationId": "bCryptEncoderUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "plainText",
            "in": "query",
            "description": "plainText",
            "required": true,
            "type": "string"
          },
          {
            "name": "strength",
            "in": "query",
            "description": "strength",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              
            ]
          }
        ]
      }
    },
    "/utility/v1/hashValue": {
      "get": {
        "tags": [
          "Utilities"
        ],
        "summary": "hashValue",
        "operationId": "hashValueUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "plainText",
            "in": "query",
            "description": "plainText",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              
            ]
          }
        ]
      }
    },
    "/utility/v1/secretKey": {
      "get": {
        "tags": [
          "Utilities"
        ],
        "summary": "secretKey",
        "operationId": "secretKeyUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "plainText",
            "in": "query",
            "description": "plainText",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "oauth2schema": [
              
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "oauth2schema": {
      "type": "oauth2",
      "tokenUrl": "http://172.20.90.131:9092/oauth/token",
      "flow": "password",
      "scopes": {
        "read": "for read operations",
        "write": "for write operations"
      }
    }
  },
  "definitions": {
    "AccountTypeDTO": {
      "type": "object",
      "properties": {
        "cashBasis": {
          "type": "string"
        },
        "code": {
          "type": "number"
        },
        "commissionLevyRate": {
          "type": "number"
        },
        "commissionReserveRate": {
          "type": "number"
        },
        "creditPolAppl": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "idSerialFormat": {
          "type": "string"
        },
        "ltaWithholdingTaxRate": {
          "type": "number"
        },
        "maximumAdvAmount": {
          "type": "number"
        },
        "maximumAdvRepaymentPeriod": {
          "type": "number"
        },
        "noGenCode": {
          "type": "string"
        },
        "odlCode": {
          "type": "string"
        },
        "overrideRate": {
          "type": "number"
        },
        "paymentPlan": {
          "type": "string"
        },
        "receiptsIncludeCommission": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "vatRate": {
          "type": "number"
        },
        "withholdingTaxRate": {
          "type": "number"
        }
      },
      "title": "AccountTypeDTO"
    },
    "Agent ": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string",
          "description": "The agent account number",
          "allowEmptyValue": false
        },
        "accountType": {
          "description": "The agent account type details",
          "allowEmptyValue": false,
          "$ref": "#/definitions/AccountTypeDTO"
        },
        "annualBudget": {
          "type": "number"
        },
        "branch": {
          "description": "The agent branch details",
          "allowEmptyValue": false,
          "$ref": "#/definitions/BranchDTO"
        },
        "code": {
          "type": "number",
          "description": "The agent code",
          "allowEmptyValue": false
        },
        "commission": {
          "type": "number",
          "allowEmptyValue": false
        },
        "commissionReserveRate": {
          "type": "number"
        },
        "contactPerson": {
          "type": "string",
          "description": "The agent contact person",
          "allowEmptyValue": false
        },
        "contactTitle": {
          "type": "string",
          "description": "The agent contact person title",
          "allowEmptyValue": false
        },
        "country": {
          "description": "The agent country details",
          "allowEmptyValue": false,
          "$ref": "#/definitions/CountryDTO"
        },
        "countryCode": {
          "type": "number",
          "description": "The agent countryCode",
          "allowEmptyValue": false
        },
        "creditAllowed": {
          "type": "string",
          "allowEmptyValue": false
        },
        "emailAddress": {
          "type": "string",
          "description": "The agent email address",
          "allowEmptyValue": false
        },
        "expiryDate": {
          "type": "string",
          "format": "date"
        },
        "fax": {
          "type": "string",
          "description": "The agent fax",
          "allowEmptyValue": false
        },
        "licenseNumber": {
          "type": "string",
          "description": "The agent license number",
          "allowEmptyValue": false
        },
        "name": {
          "type": "string",
          "description": "The agent name",
          "allowEmptyValue": false
        },
        "physicalAddress": {
          "type": "string",
          "description": "The agent physical address",
          "allowEmptyValue": false
        },
        "pin": {
          "type": "string",
          "description": "The agent pin",
          "allowEmptyValue": false
        },
        "postalAddress": {
          "type": "string",
          "description": "The agent postal address",
          "allowEmptyValue": false
        },
        "printDebitNote": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string",
          "description": "The agent short description",
          "allowEmptyValue": false
        },
        "status": {
          "type": "string",
          "description": "The agent status",
          "allowEmptyValue": false
        },
        "statusEffectiveDate": {
          "type": "string",
          "format": "date"
        },
        "telephone1": {
          "type": "string",
          "description": "The agent telephone number",
          "allowEmptyValue": false
        },
        "telephone2": {
          "type": "string",
          "description": "The agent telephone number",
          "allowEmptyValue": false
        },
        "town": {
          "description": "The agent town details",
          "allowEmptyValue": false,
          "$ref": "#/definitions/TownDTO"
        },
        "townCode": {
          "type": "number",
          "description": "The agent townCode",
          "allowEmptyValue": false
        },
        "webAddress": {
          "type": "string",
          "description": "The agent web address",
          "allowEmptyValue": false
        },
        "withholdingTax": {
          "type": "number"
        }
      },
      "title": "Agent ",
      "description": "Agent  details"
    },
    "AgentRequest": {
      "type": "object",
      "properties": {
        "accountTypeCode": {
          "type": "number",
          "description": "The agent account type code",
          "allowEmptyValue": false
        },
        "branchCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "code": {
          "type": "number",
          "description": "The agent code",
          "allowEmptyValue": false
        },
        "contactPerson": {
          "type": "string",
          "description": "The agent contact person",
          "allowEmptyValue": false
        },
        "contactTitle": {
          "type": "string",
          "description": "The agent contact person title",
          "allowEmptyValue": false
        },
        "countryCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "emailAddress": {
          "type": "string",
          "description": "The agent email address",
          "allowEmptyValue": false
        },
        "fax": {
          "type": "string",
          "description": "The agent fax",
          "allowEmptyValue": false
        },
        "licenseNumber": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "name": {
          "type": "string",
          "description": "The agent name",
          "allowEmptyValue": false
        },
        "physicalAddress": {
          "type": "string",
          "description": "The agent physical address",
          "allowEmptyValue": false
        },
        "pin": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "postalAddress": {
          "type": "string",
          "description": "The agent postal address",
          "allowEmptyValue": false
        },
        "shortDescription": {
          "type": "string",
          "description": "The agent short description",
          "allowEmptyValue": false
        },
        "status": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "telephone1": {
          "type": "string",
          "description": "The agent telephone",
          "allowEmptyValue": false
        },
        "telephone2": {
          "type": "string",
          "description": "The agent telephone",
          "allowEmptyValue": false
        },
        "townCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "webAddress": {
          "type": "string",
          "description": "The agent web address",
          "allowEmptyValue": false
        }
      },
      "title": "AgentRequest",
      "description": "Agent  details"
    },
    "Api Response": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "The process message description",
          "allowEmptyValue": false
        },
        "payload": {
          "type": "object",
          "description": "The process response object",
          "allowEmptyValue": false
        },
        "status": {
          "type": "boolean",
          "example": false,
          "description": "The process status;true or false",
          "allowEmptyValue": false
        }
      },
      "title": "Api Response",
      "description": "Api response format"
    },
    "Api Response format": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "The process message description",
          "allowEmptyValue": false
        },
        "payload": {
          "type": "object",
          "description": "The process response object",
          "allowEmptyValue": false
        },
        "status": {
          "type": "boolean",
          "example": false,
          "description": "The process status;true or false",
          "allowEmptyValue": false
        }
      },
      "title": "Api Response format",
      "description": "Api response format"
    },
    "Api Response format«Client»": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "The process message description",
          "allowEmptyValue": false
        },
        "payload": {
          "description": "The process response object",
          "allowEmptyValue": false,
          "$ref": "#/definitions/Client"
        },
        "status": {
          "type": "boolean",
          "example": false,
          "description": "The process status;true or false",
          "allowEmptyValue": false
        }
      },
      "title": "Api Response format«Client»",
      "description": "Api response format"
    },
    "Api Response«AgentRequest»": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "The process message description",
          "allowEmptyValue": false
        },
        "payload": {
          "description": "The process response object",
          "allowEmptyValue": false,
          "$ref": "#/definitions/AgentRequest"
        },
        "status": {
          "type": "boolean",
          "example": false,
          "description": "The process status;true or false",
          "allowEmptyValue": false
        }
      },
      "title": "Api Response«AgentRequest»",
      "description": "Api response format"
    },
    "Api Response«List«PolicyResponse»»": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "The process message description",
          "allowEmptyValue": false
        },
        "payload": {
          "type": "array",
          "description": "The process response object",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/PolicyResponse"
          }
        },
        "status": {
          "type": "boolean",
          "example": false,
          "description": "The process status;true or false",
          "allowEmptyValue": false
        }
      },
      "title": "Api Response«List«PolicyResponse»»",
      "description": "Api response format"
    },
    "Api Response«QuotationResponse»": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "The process message description",
          "allowEmptyValue": false
        },
        "payload": {
          "description": "The process response object",
          "allowEmptyValue": false,
          "$ref": "#/definitions/QuotationResponse"
        },
        "status": {
          "type": "boolean",
          "example": false,
          "description": "The process status;true or false",
          "allowEmptyValue": false
        }
      },
      "title": "Api Response«QuotationResponse»",
      "description": "Api response format"
    },
    "ApprovalDTO": {
      "type": "object",
      "properties": {
        "authReject": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "transId": {
          "type": "number"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "ApprovalDTO"
    },
    "BinderDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyDTO"
        },
        "name": {
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/ProductDTO"
        },
        "remarks": {
          "type": "string"
        },
        "subClass": {
          "$ref": "#/definitions/SubClassDTO"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "BinderDTO"
    },
    "BranchDTO": {
      "type": "object",
      "properties": {
        "agentCode": {
          "type": "number"
        },
        "bnsCode": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "contact": {
          "type": "string"
        },
        "countyCode": {
          "type": "number"
        },
        "emailAddress": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "genPolClm": {
          "type": "string"
        },
        "manager": {
          "type": "string"
        },
        "managerAllowed": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "overrideCommissionEarned": {
          "type": "string"
        },
        "physicalAddress": {
          "type": "string"
        },
        "postLevel": {
          "type": "string"
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "shortDescription": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "townCode": {
          "type": "number"
        },
        "zipCode": {
          "type": "number"
        }
      },
      "title": "BranchDTO"
    },
    "BrkResponseDTO": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "transCode": {
          "type": "number"
        }
      },
      "title": "BrkResponseDTO"
    },
    "BrkResponseFrmDTO": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrkResponseDTO"
          }
        }
      },
      "title": "BrkResponseFrmDTO"
    },
    "CancelReceiptDTO": {
      "type": "object",
      "properties": {
        "bankChargeAmount": {
          "type": "number"
        },
        "cancelDate": {
          "type": "string",
          "format": "date"
        },
        "otherChargesAmount": {
          "type": "number"
        },
        "remarks": {
          "type": "string"
        },
        "transCode": {
          "type": "string"
        }
      },
      "title": "CancelReceiptDTO"
    },
    "ClaimDTO": {
      "type": "object",
      "properties": {
        "admitLiability": {
          "type": "string"
        },
        "claimDate": {
          "type": "string",
          "format": "date-time"
        },
        "claimNumber": {
          "type": "string"
        },
        "claimStatus": {
          "type": "string"
        },
        "claimTotalAmount": {
          "type": "number"
        },
        "clmActivities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClmObservationDTO"
          }
        },
        "currency": {
          "$ref": "#/definitions/CurrencyDTO"
        },
        "insuredPropertyCode": {
          "type": "number"
        },
        "insuredPropertyId": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "lossDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lossDescription": {
          "type": "string"
        },
        "ownPayment": {
          "type": "number"
        },
        "ownReserve": {
          "type": "number"
        },
        "policyCode": {
          "type": "number"
        },
        "policyNumber": {
          "type": "string"
        },
        "productCode": {
          "type": "number"
        },
        "underwritingYear": {
          "type": "number"
        }
      },
      "title": "ClaimDTO"
    },
    "ClaimFormDTO": {
      "type": "object",
      "properties": {
        "claimAmount": {
          "type": "number"
        },
        "claimDate": {
          "type": "string",
          "format": "date-time"
        },
        "claimPeril": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerilFormDTO"
          }
        },
        "insuredPropertyCode": {
          "type": "number"
        },
        "lossDate": {
          "type": "string",
          "format": "date-time"
        },
        "lossDescription": {
          "type": "string"
        }
      },
      "title": "ClaimFormDTO"
    },
    "ClaimPaymentDTO": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "authorised": {
          "type": "string"
        },
        "authorisedDate": {
          "type": "string",
          "format": "date-time"
        },
        "claimNumber": {
          "type": "string"
        },
        "code": {
          "type": "number"
        },
        "compRetention": {
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyDTO"
        },
        "currencyRate": {
          "type": "number"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "payee": {
          "type": "string"
        },
        "paymentMode": {
          "type": "string"
        },
        "paymentTo": {
          "type": "string"
        },
        "transactionNumber": {
          "type": "number"
        },
        "transactionType": {
          "type": "string"
        }
      },
      "title": "ClaimPaymentDTO"
    },
    "Client": {
      "type": "object",
      "properties": {
        "clntAccOfficerName": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntAccntNo": {
          "type": "string",
          "description": "The client account number.",
          "allowEmptyValue": false
        },
        "clntAffiliated": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntAgnCode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBDivCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBankAccNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBankCellNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBankPhoneNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBbrCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBenefitPaymentMode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBouncedChq": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBpnCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBrnCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBusiness": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntBvnNo": {
          "type": "string"
        },
        "clntClntCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCntctEmail1": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCntctEmail2": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCntctName1": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCntctName2": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCntctPhone1": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCntctPhone2": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCntctRelationship": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCode": {
          "type": "number",
          "description": "The client Code.",
          "allowEmptyValue": false
        },
        "clntCommMode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCompliance": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCouCode": {
          "type": "number",
          "description": "The country Code.",
          "allowEmptyValue": false
        },
        "clntCrdtAllwd": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCrdtLimit": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCrdtMaxAmt": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCrdtRating": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCreditLimAllowed": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCreditLimit": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCrmId": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntCurrentInsurer": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDDAccountName": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDDAccountNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDDBbrCode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDateCreated": {
          "type": "string",
          "format": "date-time",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDateOfEmpl": {
          "type": "string",
          "format": "date",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDefaultCommMode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDirectClient": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDivCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDivision": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDlIssueDate": {
          "type": "string",
          "format": "date",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDob": {
          "type": "string",
          "format": "date",
          "description": "The client date of birth.",
          "allowEmptyValue": false
        },
        "clntDomicileCountries": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDrivingLicence": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDrvDlIssueDt": {
          "type": "string",
          "format": "date",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntDrvExperience": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntEducationLevel": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntEmail2": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntEmailAddrs": {
          "type": "string",
          "description": "The email address.",
          "allowEmptyValue": false
        },
        "clntEmailNotifications": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntEmployerCellNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntEmployerPhoneNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntEntCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntFax": {
          "type": "string",
          "description": "The client fax.",
          "allowEmptyValue": false
        },
        "clntFirstName": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntGender": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntGuardnAge": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntGuardnName": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntGuardnRelationship": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntIdRegNo": {
          "type": "string",
          "description": "The client ID registration number.",
          "allowEmptyValue": false
        },
        "clntLevel": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntMaritalStatus": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntModDateExpired": {
          "type": "string",
          "format": "date",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntModIssuedBy": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntModIssuingCountry": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntModType": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntModVal": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntModeDateIssued": {
          "type": "string",
          "format": "date",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntMonthlyIncome": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntName": {
          "type": "string",
          "description": "The client name.",
          "allowEmptyValue": false
        },
        "clntNationalityCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntOccCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntOccupation": {
          "description": " ",
          "allowEmptyValue": false,
          "$ref": "#/definitions/Occupation"
        },
        "clntOldAccntNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntOldShtDesc": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntOtherName": {
          "type": "string",
          "description": "The client other names.",
          "allowEmptyValue": false
        },
        "clntPassportNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntPayrollNo": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntPhysicalAddrs": {
          "type": "string",
          "description": "The client physical address.",
          "allowEmptyValue": false
        },
        "clntPin": {
          "type": "string",
          "description": "The client pin.",
          "allowEmptyValue": false
        },
        "clntPlaceOfBirth": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntPobCountry": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntPobState": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntPobTown": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntPostalAddrs": {
          "type": "string",
          "description": "The client postal address.",
          "allowEmptyValue": false
        },
        "clntPrefferedPaymode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntPremiumPaymentMode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntPremiumPaymode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntPymtDetail": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntReasonUpdated": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntRegDate": {
          "type": "string",
          "format": "date",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntRemarks": {
          "type": "string",
          "description": "The remarks.",
          "allowEmptyValue": false
        },
        "clntSacco": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSalMaxRange": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSalMinRange": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSecCode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntShtDesc": {
          "type": "string",
          "description": "The client short description.",
          "allowEmptyValue": false
        },
        "clntSmsNotifications": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSmsPrefix": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSmsPrefix2": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSmsTel": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSmsTel2": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSourceOfIncome": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSpclTerms": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSpzCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntStaffNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntStatus": {
          "type": "string",
          "description": "The status.",
          "allowEmptyValue": false
        },
        "clntStreet": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntStsCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntSurname": {
          "type": "string",
          "description": "The client surname.",
          "allowEmptyValue": false
        },
        "clntTel": {
          "type": "string",
          "description": "The client telephone number.",
          "allowEmptyValue": false
        },
        "clntTel2": {
          "type": "string",
          "description": "The client telephone number.",
          "allowEmptyValue": false
        },
        "clntTelPay": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntTelPay2": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntTitle": {
          "type": "string",
          "description": "The client title.",
          "allowEmptyValue": false
        },
        "clntTwnCode": {
          "type": "number",
          "description": "The town code.",
          "allowEmptyValue": false
        },
        "clntType": {
          "type": "string",
          "description": "The client type.",
          "allowEmptyValue": false
        },
        "clntTypeOfSourceOfIncome": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntUnlockedOn": {
          "type": "string",
          "format": "date",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntUtilityBill": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntValidationSource": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntWef": {
          "type": "string",
          "format": "date",
          "description": "The with effect from date.",
          "allowEmptyValue": false
        },
        "clntWet": {
          "type": "string",
          "format": "date",
          "description": "The with effect to date.",
          "allowEmptyValue": false
        },
        "clntWithdrawalReason": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "clntZipCode": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "cltCellNo": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        },
        "cltnClientTypes": {
          "type": "string",
          "description": " ",
          "allowEmptyValue": false
        }
      },
      "title": "Client",
      "description": "Client details"
    },
    "Client titles": {
      "type": "object",
      "properties": {
        "cltCode": {
          "type": "number",
          "description": "The title Code.",
          "allowEmptyValue": false
        },
        "cltDesc": {
          "type": "string",
          "description": "The title description.",
          "allowEmptyValue": false
        },
        "cltGender": {
          "type": "string",
          "description": "The gender of the title.",
          "allowEmptyValue": false
        },
        "cltShtDesc": {
          "type": "string",
          "description": "The title short description.",
          "allowEmptyValue": false
        }
      },
      "title": "Client titles",
      "description": "Client title description"
    },
    "ClientDTO": {
      "type": "object",
      "properties": {
        "branchCode": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "emailAddress": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "idRegistrationNumber": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "otherNames": {
          "type": "string"
        },
        "physicalAddress": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        },
        "postalAddress": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "telephone1": {
          "type": "string"
        },
        "telephone2": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "ClientDTO"
    },
    "ClientPolicyDTO": {
      "type": "object",
      "properties": {
        "agentCode": {
          "type": "string"
        },
        "agentShortDesc": {
          "type": "string"
        },
        "batchNo": {
          "type": "number"
        },
        "branchCode": {
          "type": "number"
        },
        "branchShortDescription": {
          "type": "string"
        },
        "commissionAmount": {
          "type": "number"
        },
        "commissionRate": {
          "type": "number"
        },
        "currencyCode": {
          "type": "number"
        },
        "currencySymbol": {
          "type": "string"
        },
        "drCrNo": {
          "type": "string"
        },
        "introCode": {
          "type": "number"
        },
        "introducerCom": {
          "type": "number"
        },
        "netPremium": {
          "type": "number"
        },
        "policyCoverFrom": {
          "type": "string",
          "format": "date-time"
        },
        "policyCoverTo": {
          "type": "string",
          "format": "date-time"
        },
        "policyNo": {
          "type": "string"
        },
        "policyStatus": {
          "type": "string"
        },
        "policyType": {
          "type": "string"
        },
        "preparedBy": {
          "type": "string"
        },
        "preparedDate": {
          "type": "string",
          "format": "date-time"
        },
        "productCode": {
          "type": "number"
        },
        "productShortDescription": {
          "type": "string"
        },
        "proposerCode": {
          "type": "number"
        },
        "proposerName": {
          "type": "string"
        },
        "renEndorsementNo": {
          "type": "string"
        },
        "totalSumInsured": {
          "type": "number"
        },
        "underwritingYear": {
          "type": "integer",
          "format": "int64"
        },
        "wefDate": {
          "type": "string",
          "format": "date-time"
        },
        "wetDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ClientPolicyDTO"
    },
    "ClientSearchDTO": {
      "type": "object",
      "properties": {
        "idRegistrationNumber": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        }
      },
      "title": "ClientSearchDTO"
    },
    "ClientSearchDto": {
      "type": "object",
      "properties": {
        "clntEmailAddress": {
          "type": "string"
        },
        "clntName": {
          "type": "string"
        },
        "clntPassportNo": {
          "type": "string"
        },
        "clntPhoneNumber": {
          "type": "string"
        },
        "polPolicyNo": {
          "type": "string"
        }
      },
      "title": "ClientSearchDto"
    },
    "ClientTypeDTO": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "clientType": {
          "type": "string"
        },
        "code": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "ClientTypeDTO"
    },
    "ClmObservationDTO": {
      "type": "object",
      "properties": {
        "claimNumber": {
          "type": "string"
        },
        "clmActivityStatus": {
          "type": "string"
        },
        "clmStatusDesc": {
          "type": "string"
        },
        "obserDate": {
          "type": "string",
          "format": "date-time"
        },
        "observation": {
          "type": "string"
        }
      },
      "title": "ClmObservationDTO"
    },
    "CountryDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "currencySerial": {
          "type": "number"
        },
        "mobilePrefix": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "zipCode": {
          "type": "number"
        }
      },
      "title": "CountryDTO"
    },
    "CoverTypeDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "downgradeOnSus": {
          "type": "string"
        },
        "downgradeOnSusTo": {
          "type": "string"
        },
        "minSumInsured": {
          "type": "number"
        },
        "shortDescription": {
          "type": "string"
        }
      },
      "title": "CoverTypeDTO"
    },
    "CurrencyDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "decimalWord": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "numberWord": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        }
      },
      "title": "CurrencyDTO"
    },
    "DeferredResult«Api Response format«Client»»": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        },
        "setOrExpired": {
          "type": "boolean"
        }
      },
      "title": "DeferredResult«Api Response format«Client»»"
    },
    "DeferredResult«Page«Client titles»»": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        },
        "setOrExpired": {
          "type": "boolean"
        }
      },
      "title": "DeferredResult«Page«Client titles»»"
    },
    "DeferredResult«Page«Client»»": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        },
        "setOrExpired": {
          "type": "boolean"
        }
      },
      "title": "DeferredResult«Page«Client»»"
    },
    "DeferredResult«ResponseEntity«BranchDTO»»": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        },
        "setOrExpired": {
          "type": "boolean"
        }
      },
      "title": "DeferredResult«ResponseEntity«BranchDTO»»"
    },
    "DeferredResult«ResponseEntity«List«PolicyDTO»»»": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        },
        "setOrExpired": {
          "type": "boolean"
        }
      },
      "title": "DeferredResult«ResponseEntity«List«PolicyDTO»»»"
    },
    "GisTransmitalDTO": {
      "type": "object",
      "properties": {
        "polBatchNo": {
          "type": "number"
        },
        "policyNumber": {
          "type": "string"
        },
        "tranRefNo": {
          "type": "string"
        }
      },
      "title": "GisTransmitalDTO"
    },
    "IPayment": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "ipayrefNo": {
          "type": "string"
        },
        "paidBy": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        },
        "sourceRef": {
          "type": "string"
        }
      },
      "title": "IPayment"
    },
    "JournalApprovalDTO": {
      "type": "object",
      "properties": {
        "authReject": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "transId": {
          "type": "number"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "JournalApprovalDTO"
    },
    "JournalSearchDTO": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "number"
        },
        "vglNo": {
          "type": "number"
        }
      },
      "title": "JournalSearchDTO"
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "100",
            "101",
            "102",
            "103",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "226",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "307",
            "308",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "426",
            "428",
            "429",
            "431",
            "451",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      },
      "title": "ModelAndView"
    },
    "OAuth2AccessToken": {
      "type": "object",
      "properties": {
        "additionalInformation": {
          "type": "object"
        },
        "expiration": {
          "type": "string",
          "format": "date-time"
        },
        "expired": {
          "type": "boolean"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "$ref": "#/definitions/OAuth2RefreshToken"
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tokenType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "OAuth2AccessToken"
    },
    "OAuth2RefreshToken": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "OAuth2RefreshToken"
    },
    "Occupation": {
      "type": "object",
      "properties": {
        "occCode": {
          "type": "number"
        },
        "occName": {
          "type": "string"
        },
        "occShtDesc": {
          "type": "string"
        }
      },
      "title": "Occupation"
    },
    "OldTreatySetup": {
      "type": "object",
      "properties": {
        "cashLoss": {
          "type": "number"
        },
        "cedeRate": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "commissionRate": {
          "type": "number"
        },
        "currencyCode": {
          "type": "number"
        },
        "currencySymbol": {
          "type": "string"
        },
        "exclusions": {
          "type": "string"
        },
        "information": {
          "type": "string"
        },
        "limit": {
          "type": "number"
        },
        "lossPortfolio": {
          "type": "number"
        },
        "managementFee": {
          "type": "number"
        },
        "premiumPortfolio": {
          "type": "number"
        },
        "premiumReservationInt": {
          "type": "number"
        },
        "profitComm": {
          "type": "number"
        },
        "quakeLimit": {
          "type": "number"
        },
        "rateType": {
          "type": "string"
        },
        "reiAccNo": {
          "type": "string"
        },
        "reiAccounts": {
          "type": "string"
        },
        "reiCurRate": {
          "type": "number"
        },
        "reiEarthqkeCommRate": {
          "type": "number"
        },
        "reiFiCedeRate": {
          "type": "number"
        },
        "reiGenConditions": {
          "type": "string"
        },
        "reiLocalForgn": {
          "type": "string"
        },
        "reiMinimumEml": {
          "type": "number"
        },
        "reiNextReiCode": {
          "type": "number"
        },
        "reiOrgCode": {
          "type": "number"
        },
        "reiPrdLossesCarriedFrd": {
          "type": "number"
        },
        "reiRiPremTaxDivFact": {
          "type": "number"
        },
        "reiRiPremTaxRate": {
          "type": "number"
        },
        "reiSiStartFrom": {
          "type": "number"
        },
        "reiTaxInterest": {
          "type": "number"
        },
        "reiTrsShtDesc": {
          "type": "string"
        },
        "retainedPremium": {
          "type": "number"
        },
        "securityValues": {
          "type": "string"
        },
        "treatyShortDesc": {
          "type": "string"
        },
        "underwritingYear": {
          "type": "number"
        },
        "warranty": {
          "type": "string"
        },
        "wefDate": {
          "type": "string",
          "format": "date"
        },
        "wetDate": {
          "type": "string",
          "format": "date"
        },
        "wording": {
          "type": "string"
        }
      },
      "title": "OldTreatySetup"
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "paged": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "unpaged": {
          "type": "boolean"
        }
      },
      "title": "Pageable"
    },
    "Page«BinderDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BinderDTO"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«BinderDTO»"
    },
    "Page«Client titles»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Client titles"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«Client titles»"
    },
    "Page«Client»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Client"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«Client»"
    },
    "Page«QuotationDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotationDTO"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«QuotationDTO»"
    },
    "Page«QuotationResponse»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotationResponse"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«QuotationResponse»"
    },
    "Page«object»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«object»"
    },
    "PerilDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "fullDescription": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "perilType": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "withEffectFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "withEffectToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "PerilDTO"
    },
    "PerilFormDTO": {
      "type": "object",
      "properties": {
        "perilAmount": {
          "type": "number"
        },
        "perilCode": {
          "type": "number"
        }
      },
      "title": "PerilFormDTO"
    },
    "Policy Document": {
      "type": "object",
      "properties": {
        "documentString": {
          "type": "string",
          "description": "The Base64 encode string value of the document",
          "allowEmptyValue": false
        },
        "message": {
          "type": "string",
          "description": "The response description",
          "allowEmptyValue": false
        },
        "policyBatchNo": {
          "type": "integer",
          "format": "int64",
          "description": "The policy batch number - the unique identifier for the document record",
          "allowEmptyValue": false
        },
        "policyNumber": {
          "type": "string",
          "description": "The policy number",
          "allowEmptyValue": false
        },
        "status": {
          "type": "boolean",
          "example": false,
          "description": "The response status",
          "allowEmptyValue": false
        },
        "timestamp": {
          "type": "string",
          "description": "The response time",
          "allowEmptyValue": false
        }
      },
      "title": "Policy Document",
      "description": "Policy Document Details"
    },
    "PolicyDTO": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/Agent "
        },
        "alpProposalNumber": {
          "type": "string"
        },
        "basicPremium": {
          "type": "number"
        },
        "checkedBy": {
          "type": "string"
        },
        "checkedDate": {
          "type": "string",
          "format": "date-time"
        },
        "code": {
          "type": "number"
        },
        "commissionAmount": {
          "type": "number"
        },
        "commissionRate": {
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyDTO"
        },
        "inceptionDate": {
          "type": "string",
          "format": "date-time"
        },
        "netPremium": {
          "type": "number"
        },
        "policyNumber": {
          "type": "string"
        },
        "policyRisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyRiskDTO"
          }
        },
        "policyType": {
          "type": "string"
        },
        "preparedBy": {
          "type": "string"
        },
        "preparedDate": {
          "type": "string",
          "format": "date-time"
        },
        "productCode": {
          "type": "number"
        },
        "reInsured": {
          "type": "string"
        },
        "renewalEndorsementNumber": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "totalSumInsured": {
          "type": "number"
        },
        "transactionType": {
          "type": "string"
        },
        "underwritingYear": {
          "type": "number"
        },
        "withEffectFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "withEffectToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "PolicyDTO"
    },
    "PolicyResponse": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/Agent "
        },
        "alpProposalNumber": {
          "type": "string"
        },
        "basicPremium": {
          "type": "number"
        },
        "checkedBy": {
          "type": "string"
        },
        "checkedDate": {
          "type": "string",
          "format": "date-time"
        },
        "code": {
          "type": "number"
        },
        "commissionAmount": {
          "type": "number"
        },
        "commissionRate": {
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyDTO"
        },
        "inceptionDate": {
          "type": "string",
          "format": "date-time"
        },
        "netPremium": {
          "type": "number"
        },
        "policyNumber": {
          "type": "string"
        },
        "policyRisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyRiskResponse"
          }
        },
        "policyType": {
          "type": "string"
        },
        "preparedBy": {
          "type": "string"
        },
        "preparedDate": {
          "type": "string",
          "format": "date-time"
        },
        "productCode": {
          "type": "number"
        },
        "reInsured": {
          "type": "string"
        },
        "renewalEndorsementNumber": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "totalSumInsured": {
          "type": "number"
        },
        "transactionType": {
          "type": "string"
        },
        "underwritingYear": {
          "type": "number"
        },
        "withEffectFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "withEffectToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "PolicyResponse"
    },
    "PolicyRiskDTO": {
      "type": "object",
      "properties": {
        "basicPremium": {
          "type": "number"
        },
        "binder": {
          "$ref": "#/definitions/BinderDTO"
        },
        "client": {
          "$ref": "#/definitions/ClientDTO"
        },
        "code": {
          "type": "number"
        },
        "coverDays": {
          "type": "number"
        },
        "coverType": {
          "$ref": "#/definitions/CoverTypeDTO"
        },
        "enforceCvtMinimumPremium": {
          "type": "string"
        },
        "itemDesc": {
          "type": "string"
        },
        "minimumPremiumUsed": {
          "type": "string"
        },
        "netPremium": {
          "type": "number"
        },
        "policyRiskSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyRiskSectionDTO"
          }
        },
        "polinCode": {
          "type": "number"
        },
        "previousBatchNo": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "quotationRevisionNumber": {
          "type": "number"
        },
        "subClass": {
          "$ref": "#/definitions/SubClassDTO"
        },
        "value": {
          "type": "number"
        },
        "withEffectFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "withEffectToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "PolicyRiskDTO"
    },
    "PolicyRiskPerilDTO": {
      "type": "object",
      "properties": {
        "batchNo": {
          "type": "number"
        },
        "excessType": {
          "type": "string"
        },
        "ipuCode": {
          "type": "number"
        },
        "mainPeril": {
          "type": "string"
        },
        "mainPerilCode": {
          "type": "number"
        },
        "perilCode": {
          "type": "number"
        },
        "perilLvl": {
          "type": "string"
        },
        "perilShtDesc": {
          "type": "string"
        },
        "perilType": {
          "type": "string"
        },
        "siOrLimit": {
          "type": "string"
        },
        "siOrLimitDesc": {
          "type": "string"
        }
      },
      "title": "PolicyRiskPerilDTO"
    },
    "PolicyRiskResponse": {
      "type": "object",
      "properties": {
        "basicPremium": {
          "type": "number"
        },
        "binder": {
          "$ref": "#/definitions/BinderDTO"
        },
        "client": {
          "$ref": "#/definitions/ClientDTO"
        },
        "code": {
          "type": "number"
        },
        "coverDays": {
          "type": "number"
        },
        "coverType": {
          "$ref": "#/definitions/CoverTypeDTO"
        },
        "enforceCvtMinimumPremium": {
          "type": "string"
        },
        "itemDesc": {
          "type": "string"
        },
        "minimumPremiumUsed": {
          "type": "string"
        },
        "netPremium": {
          "type": "number"
        },
        "policyRiskSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyRiskSectionResponse"
          }
        },
        "polinCode": {
          "type": "number"
        },
        "previousBatchNo": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "quotationRevisionNumber": {
          "type": "number"
        },
        "subClass": {
          "$ref": "#/definitions/SubClassDTO"
        },
        "value": {
          "type": "number"
        },
        "withEffectFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "withEffectToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "PolicyRiskResponse"
    },
    "PolicyRiskSectionDTO": {
      "type": "object",
      "properties": {
        "annualPremium": {
          "type": "number"
        },
        "annualPremiumAmount": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "limitAmount": {
          "type": "number"
        },
        "minimumPremium": {
          "type": "number"
        },
        "premiumAmount": {
          "type": "number"
        },
        "prorataOrFull": {
          "type": "string"
        },
        "section": {
          "$ref": "#/definitions/SectionDTO"
        },
        "usedLimitAmount": {
          "type": "number"
        }
      },
      "title": "PolicyRiskSectionDTO"
    },
    "PolicyRiskSectionResponse": {
      "type": "object",
      "properties": {
        "annualPremium": {
          "type": "number"
        },
        "annualPremiumAmount": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "limitAmount": {
          "type": "number"
        },
        "minimumPremium": {
          "type": "number"
        },
        "premiumAmount": {
          "type": "number"
        },
        "prorataOrFull": {
          "type": "string"
        },
        "sectionShortDescription": {
          "type": "string"
        },
        "usedLimitAmount": {
          "type": "number"
        }
      },
      "title": "PolicyRiskSectionResponse"
    },
    "ProductDTO": {
      "type": "object",
      "properties": {
        "claimPrefix": {
          "type": "string"
        },
        "code": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "interfaceType": {
          "type": "string"
        },
        "policyPrefix": {
          "type": "string"
        },
        "productSubClasses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSubClassDTO"
          }
        },
        "shortDescription": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "withEffectFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "withEffectToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ProductDTO"
    },
    "ProductSubClassDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "effectiveFrom": {
          "type": "string",
          "format": "date-time"
        },
        "effectiveTo": {
          "type": "string",
          "format": "date-time"
        },
        "product": {
          "$ref": "#/definitions/ProductDTO"
        },
        "subClass": {
          "$ref": "#/definitions/SubClassDTO"
        }
      },
      "title": "ProductSubClassDTO"
    },
    "ProspectDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "companyName": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "contactTel": {
          "type": "string"
        },
        "countryCode": {
          "type": "number"
        },
        "dob": {
          "type": "string",
          "format": "date-time"
        },
        "emailAddress": {
          "type": "string"
        },
        "extSysCode": {
          "type": "string"
        },
        "idRegNo": {
          "type": "string"
        },
        "mobileNo": {
          "type": "string"
        },
        "otherNames": {
          "type": "string"
        },
        "physicalAddress": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        },
        "postalAddress": {
          "type": "string"
        },
        "postalCode": {
          "type": "number"
        },
        "surname": {
          "type": "string"
        },
        "telNo": {
          "type": "string"
        },
        "townCode": {
          "type": "number"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "ProspectDTO"
    },
    "QuotationDTO": {
      "type": "object",
      "properties": {
        "agentCode": {
          "type": "number"
        },
        "authorisedBy": {
          "type": "string"
        },
        "authorisedDate": {
          "type": "string",
          "format": "date-time"
        },
        "branchCode": {
          "type": "number"
        },
        "client": {
          "$ref": "#/definitions/ClientDTO"
        },
        "clientCode": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "comments": {
          "type": "string"
        },
        "commissionAmount": {
          "type": "number"
        },
        "confirmed": {
          "type": "string"
        },
        "confirmedBy": {
          "type": "string"
        },
        "confirmedDate": {
          "type": "string",
          "format": "date-time"
        },
        "coverFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "coverToDate": {
          "type": "string",
          "format": "date-time"
        },
        "currencyCode": {
          "type": "number"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "premiumAmount": {
          "type": "number"
        },
        "propertyHoldingCoPrpCode": {
          "type": "number"
        },
        "quotationDate": {
          "type": "string",
          "format": "date-time"
        },
        "quotationNumber": {
          "type": "string"
        },
        "quotationRevisionNumber": {
          "type": "number"
        },
        "quotationRisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotationRiskDTO"
          }
        },
        "ready": {
          "type": "string"
        },
        "readyBy": {
          "type": "string"
        },
        "readyDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "totalPropertyValue": {
          "type": "number"
        }
      },
      "title": "QuotationDTO"
    },
    "QuotationFormDTO": {
      "type": "object",
      "properties": {
        "agentCode": {
          "type": "number"
        },
        "branchCode": {
          "type": "number"
        },
        "clientCode": {
          "type": "number"
        },
        "coverFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "coverToDate": {
          "type": "string",
          "format": "date-time"
        },
        "currencyCode": {
          "type": "number"
        },
        "paymentFrequency": {
          "type": "string"
        },
        "productCode": {
          "type": "number"
        },
        "prospectCode": {
          "type": "number"
        },
        "quotationRisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotationRiskFormDTO"
          }
        },
        "requestId": {
          "type": "string"
        }
      },
      "title": "QuotationFormDTO"
    },
    "QuotationResponse": {
      "type": "object",
      "properties": {
        "agentCode": {
          "type": "number",
          "description": "The intermediary code",
          "allowEmptyValue": false
        },
        "authorisedBy": {
          "type": "string",
          "description": "The Authorised by name",
          "allowEmptyValue": false
        },
        "authorisedDate": {
          "type": "string",
          "format": "date-time",
          "description": "The authorisation date",
          "allowEmptyValue": false
        },
        "branchCode": {
          "type": "number",
          "description": "The branch code",
          "allowEmptyValue": false
        },
        "client": {
          "description": "The Client details",
          "allowEmptyValue": false,
          "$ref": "#/definitions/ClientDTO"
        },
        "code": {
          "type": "number",
          "description": "The quotation code",
          "allowEmptyValue": false
        },
        "comments": {
          "type": "string",
          "description": "The quotation comments",
          "allowEmptyValue": false
        },
        "commissionAmount": {
          "type": "number",
          "description": "The commission amount",
          "allowEmptyValue": false
        },
        "confirmed": {
          "type": "string",
          "description": "The confirmation attribute",
          "allowEmptyValue": false
        },
        "confirmedBy": {
          "type": "string",
          "description": "The confirming person",
          "allowEmptyValue": false
        },
        "confirmedDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of confirmation",
          "allowEmptyValue": false
        },
        "coverFromDate": {
          "type": "string",
          "format": "date-time",
          "description": "The cover from date",
          "allowEmptyValue": false
        },
        "coverToDate": {
          "type": "string",
          "format": "date-time",
          "description": "The cover to date",
          "allowEmptyValue": false
        },
        "currencyCode": {
          "type": "number",
          "description": "The currency code",
          "allowEmptyValue": false
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiry date",
          "allowEmptyValue": false
        },
        "premiumAmount": {
          "type": "number",
          "description": "The premium amount",
          "allowEmptyValue": false
        },
        "propertyHoldingCoPrpCode": {
          "type": "number",
          "description": " ",
          "allowEmptyValue": false
        },
        "quotationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The quotation date",
          "allowEmptyValue": false
        },
        "quotationNumber": {
          "type": "string",
          "description": "The quotation number",
          "allowEmptyValue": false
        },
        "quotationRevisionNumber": {
          "type": "number",
          "description": "The quotation revision number",
          "allowEmptyValue": false
        },
        "quotationRisks": {
          "type": "array",
          "description": "The quotation risks details",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/QuotationRiskResponse"
          }
        },
        "ready": {
          "type": "string",
          "allowEmptyValue": false
        },
        "readyBy": {
          "type": "string",
          "allowEmptyValue": false
        },
        "readyDate": {
          "type": "string",
          "format": "date-time",
          "allowEmptyValue": false
        },
        "status": {
          "type": "string",
          "description": "The quotation status",
          "allowEmptyValue": false
        },
        "totalPropertyValue": {
          "type": "number",
          "description": "The total property value",
          "allowEmptyValue": false
        }
      },
      "title": "QuotationResponse",
      "description": "Quotation response details"
    },
    "QuotationRiskDTO": {
      "type": "object",
      "properties": {
        "annualPremium": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "commissionPremium": {
          "type": "number"
        },
        "coverType": {
          "$ref": "#/definitions/CoverTypeDTO"
        },
        "enforceCvtMinimumPremium": {
          "type": "string"
        },
        "itemDesc": {
          "type": "string"
        },
        "minimumPremiumUsed": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "quotation": {
          "$ref": "#/definitions/QuotationDTO"
        },
        "quotationRiskSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotationRiskSectionDTO"
          }
        },
        "value": {
          "type": "number"
        },
        "withEffectFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "withEffectToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "QuotationRiskDTO"
    },
    "QuotationRiskDtlDTO": {
      "type": "object",
      "properties": {
        "bodyType": {
          "type": "string"
        },
        "chassisNo": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "cubicCapacity": {
          "type": "number"
        },
        "engineNp": {
          "type": "string"
        },
        "fuelType": {
          "type": "string"
        },
        "logNo": {
          "type": "string"
        },
        "makeDesc": {
          "type": "string"
        },
        "modelDesc": {
          "type": "string"
        },
        "seatCapacity": {
          "type": "number"
        },
        "yom": {
          "type": "number"
        }
      },
      "title": "QuotationRiskDtlDTO"
    },
    "QuotationRiskFormDTO": {
      "type": "object",
      "properties": {
        "binderCode": {
          "type": "number"
        },
        "coverTypeCode": {
          "type": "number"
        },
        "itemDesc": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "quotationRiskSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotationRiskSectionFormDTO"
          }
        },
        "riskAdditionalInfo": {
          "$ref": "#/definitions/QuotationRiskDtlDTO"
        },
        "withEffectFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "withEffectToDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "QuotationRiskFormDTO"
    },
    "QuotationRiskResponse": {
      "type": "object",
      "properties": {
        "annualPremium": {
          "type": "number",
          "description": "The risk annual premium",
          "allowEmptyValue": false
        },
        "code": {
          "type": "number",
          "description": "The risk code",
          "allowEmptyValue": false
        },
        "commissionPremium": {
          "type": "number",
          "description": "The commission value",
          "allowEmptyValue": false
        },
        "coverTypeCode": {
          "type": "number",
          "description": "The cover type code",
          "allowEmptyValue": false
        },
        "enforceCvtMinimumPremium": {
          "type": "string",
          "allowEmptyValue": false
        },
        "itemDesc": {
          "type": "string",
          "description": "The property description",
          "allowEmptyValue": false
        },
        "minimumPremiumUsed": {
          "type": "string",
          "allowEmptyValue": false
        },
        "propertyId": {
          "type": "string",
          "description": "The property id",
          "allowEmptyValue": false
        },
        "quotation": {
          "$ref": "#/definitions/QuotationResponse"
        },
        "quotationRiskSections": {
          "type": "array",
          "description": "The risk section details",
          "allowEmptyValue": false,
          "items": {
            "$ref": "#/definitions/QuotationRiskSectionResponse"
          }
        },
        "value": {
          "type": "number",
          "description": "The risk value",
          "allowEmptyValue": false
        },
        "withEffectFromDate": {
          "type": "string",
          "format": "date-time",
          "description": "The with effect from date",
          "allowEmptyValue": false
        },
        "withEffectToDate": {
          "type": "string",
          "format": "date-time",
          "description": "The with effect to date",
          "allowEmptyValue": false
        }
      },
      "title": "QuotationRiskResponse",
      "description": "Quotation Risk response details"
    },
    "QuotationRiskSectionDTO": {
      "type": "object",
      "properties": {
        "annualPremium": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "limitAmount": {
          "type": "number"
        },
        "minimumPremium": {
          "type": "number"
        },
        "premiumAmount": {
          "type": "number"
        },
        "section": {
          "$ref": "#/definitions/SectionDTO"
        },
        "sectionDescription": {
          "type": "string"
        }
      },
      "title": "QuotationRiskSectionDTO"
    },
    "QuotationRiskSectionFormDTO": {
      "type": "object",
      "properties": {
        "limitAmount": {
          "type": "number"
        },
        "sectionCode": {
          "type": "number"
        }
      },
      "title": "QuotationRiskSectionFormDTO"
    },
    "QuotationRiskSectionResponse": {
      "type": "object",
      "properties": {
        "annualPremium": {
          "type": "number",
          "description": "The section annual premium",
          "allowEmptyValue": false
        },
        "code": {
          "type": "number",
          "description": "The risk section code",
          "allowEmptyValue": false
        },
        "limitAmount": {
          "type": "number",
          "description": "The section limit amount",
          "allowEmptyValue": false
        },
        "minimumPremium": {
          "type": "number",
          "description": "The section minimum premium",
          "allowEmptyValue": false
        },
        "premiumAmount": {
          "type": "number",
          "description": "The section premium amount",
          "allowEmptyValue": false
        },
        "section": {
          "$ref": "#/definitions/SectionDTO"
        },
        "sectionDescription": {
          "type": "string",
          "description": "The risk section description",
          "allowEmptyValue": false
        }
      },
      "title": "QuotationRiskSectionResponse",
      "description": "Quotation section response details"
    },
    "ReceiptDTO": {
      "type": "object",
      "properties": {
        "bankAccount": {
          "type": "string"
        },
        "clntShtDesc": {
          "type": "string"
        },
        "customerName": {
          "type": "string"
        },
        "paymentMemo": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "transAmount": {
          "type": "number"
        },
        "transCode": {
          "type": "string"
        },
        "transDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ReceiptDTO"
    },
    "Region": {
      "type": "object",
      "properties": {
        "agentCode": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "organisationCode": {
          "type": "number"
        },
        "shortDescription": {
          "type": "string"
        }
      },
      "title": "Region"
    },
    "RegionDTO": {
      "type": "object",
      "properties": {
        "agentCode": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "organisationCode": {
          "type": "number"
        },
        "shortDescription": {
          "type": "string"
        }
      },
      "title": "RegionDTO"
    },
    "ReportParam": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ReportParam"
    },
    "ReportsDto": {
      "type": "object",
      "properties": {
        "encodeFormat": {
          "type": "string"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportParam"
          }
        },
        "reportFormat": {
          "type": "string"
        },
        "rptCode": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ReportsDto"
    },
    "RequisitionSearchDTO": {
      "type": "object",
      "properties": {
        "dateFrom": {
          "type": "string",
          "format": "date"
        },
        "dateTo": {
          "type": "string",
          "format": "date"
        },
        "payMode": {
          "type": "string"
        },
        "system": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "RequisitionSearchDTO"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100",
            "101",
            "102",
            "103",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "226",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "307",
            "308",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "426",
            "428",
            "429",
            "431",
            "451",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "SearchDTO": {
      "type": "object",
      "properties": {
        "agnCode": {
          "type": "number"
        },
        "claimNo": {
          "type": "string"
        },
        "clientCode": {
          "type": "number"
        },
        "dateFrom": {
          "type": "string",
          "example": "yyyy-MM-dd"
        },
        "dateTo": {
          "type": "string",
          "example": "yyyy-MM-dd"
        },
        "policyNo": {
          "type": "string"
        },
        "prodCode": {
          "type": "number"
        },
        "riskId": {
          "type": "string"
        }
      },
      "title": "SearchDTO"
    },
    "SectionDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "detailDescription": {
          "type": "string"
        },
        "excessDetails": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "webDescription": {
          "type": "string"
        }
      },
      "title": "SectionDTO"
    },
    "Sort": {
      "type": "object",
      "properties": {
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      },
      "title": "Sort"
    },
    "SubAgentDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "contactPerson": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "postalAddress": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "telephoneNumber": {
          "type": "string"
        }
      },
      "title": "SubAgentDTO"
    },
    "SubClassCoverTypeDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "coverType": {
          "$ref": "#/definitions/CoverTypeDTO"
        },
        "description": {
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/ProductDTO"
        },
        "shortDescription": {
          "type": "string"
        },
        "subClass": {
          "$ref": "#/definitions/SubClassDTO"
        }
      },
      "title": "SubClassCoverTypeDTO"
    },
    "SubClassDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "SubClassDTO"
    },
    "SubClassSectionPerilDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "peril": {
          "$ref": "#/definitions/PerilDTO"
        },
        "subClassSectionCode": {
          "type": "number"
        }
      },
      "title": "SubClassSectionPerilDTO"
    },
    "SystemReportDTO": {
      "type": "object",
      "properties": {
        "rptCode": {
          "type": "number"
        },
        "rptDataFile": {
          "type": "string"
        },
        "rptDescription": {
          "type": "string"
        },
        "rptName": {
          "type": "string"
        },
        "rptSystem": {
          "type": "string"
        }
      },
      "title": "SystemReportDTO"
    },
    "TownDTO": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "country": {
          "$ref": "#/definitions/CountryDTO"
        },
        "name": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "stsCode": {
          "type": "number"
        }
      },
      "title": "TownDTO"
    },
    "TreatySetupDTO": {
      "type": "object",
      "properties": {
        "asCode": {
          "type": "number"
        },
        "cedeRate": {
          "type": "number"
        },
        "code": {
          "type": "number"
        },
        "commissionRate": {
          "type": "number"
        },
        "currencyCode": {
          "type": "number"
        },
        "limit": {
          "type": "number"
        },
        "profitCommission": {
          "type": "number"
        },
        "quakeLimit": {
          "type": "number"
        },
        "rateType": {
          "type": "string"
        },
        "taCode": {
          "type": "number"
        },
        "treatyCode": {
          "type": "number"
        },
        "treatyShortDescription": {
          "type": "string"
        },
        "trsCode": {
          "type": "number"
        },
        "underwritingYear": {
          "type": "number"
        }
      },
      "title": "TreatySetupDTO"
    },
    "User Details": {
      "type": "object",
      "properties": {
        "account_code": {
          "type": "integer",
          "format": "int64",
          "description": "The user account code",
          "allowEmptyValue": false
        },
        "account_manager": {
          "type": "string",
          "description": "The account manager name",
          "allowEmptyValue": false
        },
        "activated_by": {
          "type": "string",
          "description": "The user who activated the account",
          "allowEmptyValue": false
        },
        "agent_code": {
          "type": "integer",
          "format": "int64",
          "description": "The user agent code",
          "allowEmptyValue": false
        },
        "authorized": {
          "type": "string",
          "description": "The user is authorized",
          "allowEmptyValue": false,
          "enum": [
            "YES",
            "NO",
            "Y",
            "N"
          ]
        },
        "authorized_by": {
          "type": "string",
          "description": "The authorizing user",
          "allowEmptyValue": false
        },
        "branch_code": {
          "type": "integer",
          "format": "int64",
          "description": "The user branch code",
          "allowEmptyValue": false
        },
        "can_sign_documents": {
          "type": "string",
          "description": "The user can sign documents",
          "allowEmptyValue": false,
          "enum": [
            "YES",
            "NO",
            "Y",
            "N"
          ]
        },
        "code": {
          "type": "number",
          "description": "The user code",
          "allowEmptyValue": false
        },
        "country_code": {
          "type": "integer",
          "format": "int64",
          "description": "The user's country",
          "allowEmptyValue": false
        },
        "create_by": {
          "type": "string",
          "description": "The user who created this user",
          "allowEmptyValue": false
        },
        "date_activated": {
          "type": "string",
          "description": "The date the user was activated",
          "allowEmptyValue": false
        },
        "date_authorized": {
          "type": "string",
          "description": "The date the user was authorized",
          "allowEmptyValue": false
        },
        "date_created": {
          "type": "string",
          "description": "The user creation date",
          "allowEmptyValue": false
        },
        "date_deactivated": {
          "type": "string",
          "description": "The date the user was deactivated",
          "allowEmptyValue": false
        },
        "date_from": {
          "type": "string",
          "description": "The user start date",
          "allowEmptyValue": false
        },
        "date_to": {
          "type": "string",
          "description": "The user end date",
          "allowEmptyValue": false
        },
        "date_updated": {
          "type": "string",
          "description": "The date last updated",
          "allowEmptyValue": false
        },
        "deactivated_by": {
          "type": "string",
          "description": "The user who deactivate the account",
          "allowEmptyValue": false
        },
        "deleted": {
          "type": "string",
          "description": "The user is deleted",
          "allowEmptyValue": false,
          "enum": [
            "YES",
            "NO",
            "Y",
            "N"
          ]
        },
        "email": {
          "type": "string",
          "description": "The user email address",
          "allowEmptyValue": false
        },
        "employment_status": {
          "type": "string",
          "description": "The user employment status",
          "allowEmptyValue": false
        },
        "is_portal_user": {
          "type": "string",
          "description": "The user can access TurnQuest Portals",
          "allowEmptyValue": false
        },
        "last_login_date": {
          "type": "string",
          "description": "The last logn date for user",
          "allowEmptyValue": false
        },
        "login_attempts": {
          "type": "integer",
          "format": "int64",
          "description": "Current login attempts",
          "allowEmptyValue": false
        },
        "name": {
          "type": "string",
          "description": "The full name",
          "allowEmptyValue": false
        },
        "organization_code": {
          "type": "integer",
          "format": "int64",
          "description": "The user organization code",
          "allowEmptyValue": false
        },
        "password": {
          "type": "string",
          "description": "The user password",
          "allowEmptyValue": false
        },
        "password_change_date": {
          "type": "string",
          "description": "The date password was last changed.",
          "allowEmptyValue": false
        },
        "password_date_to": {
          "type": "string",
          "description": "The end date of the password",
          "allowEmptyValue": false
        },
        "password_reset_by": {
          "type": "string",
          "description": "The user who did password reset",
          "allowEmptyValue": false
        },
        "password_reset_code": {
          "type": "string",
          "description": "The password reset code",
          "allowEmptyValue": false
        },
        "password_reset_date": {
          "type": "string",
          "description": "The date pass was reset",
          "allowEmptyValue": false
        },
        "password_start_date": {
          "type": "string",
          "description": "The start date of the password",
          "allowEmptyValue": false
        },
        "password_stop_alert_date": {
          "type": "string",
          "description": "The alter date for pawword stoppage",
          "allowEmptyValue": false
        },
        "person_id": {
          "type": "integer",
          "format": "int64",
          "description": "The user'd person id",
          "allowEmptyValue": false
        },
        "personel_rank": {
          "type": "string",
          "description": "The user personel rank",
          "allowEmptyValue": false
        },
        "phone_number": {
          "type": "string",
          "description": "The user phone number",
          "allowEmptyValue": false
        },
        "rank_id": {
          "type": "integer",
          "format": "int64",
          "description": "The user rank code",
          "allowEmptyValue": false
        },
        "rank_short_description": {
          "type": "string",
          "description": "The user rank short description",
          "allowEmptyValue": false
        },
        "reference_no": {
          "type": "string",
          "description": "The user reference number",
          "allowEmptyValue": false
        },
        "reset_password": {
          "type": "string",
          "description": "The user should reset the password",
          "allowEmptyValue": false,
          "enum": [
            "YES",
            "NO",
            "Y",
            "N"
          ]
        },
        "security_answer": {
          "type": "string",
          "description": "The user security answer",
          "allowEmptyValue": false
        },
        "sms_code": {
          "type": "string",
          "description": "The user SMS code",
          "allowEmptyValue": false
        },
        "staff_id": {
          "type": "integer",
          "format": "int64",
          "description": "The user staff code",
          "allowEmptyValue": false
        },
        "status_change_date": {
          "type": "string",
          "description": "The user status change date",
          "allowEmptyValue": false
        },
        "supervisor_code": {
          "type": "integer",
          "format": "int64",
          "description": "The user supervisor code",
          "allowEmptyValue": false
        },
        "update_by": {
          "type": "string",
          "description": "The last user to update",
          "allowEmptyValue": false
        },
        "user_pin": {
          "type": "string",
          "description": "The user PIN",
          "allowEmptyValue": false
        },
        "user_status": {
          "type": "string",
          "description": "The user status",
          "allowEmptyValue": false,
          "enum": [
            "ACTIVE",
            "INACTIVE",
            "UNKNOWN"
          ]
        },
        "user_type": {
          "type": "string",
          "description": "The user type",
          "allowEmptyValue": false
        },
        "username": {
          "type": "string",
          "description": "The username",
          "allowEmptyValue": false
        }
      },
      "title": "User Details",
      "description": "Details about a system user"
    },
    "ValidatorDTO": {
      "type": "object",
      "properties": {
        "clntShtDesc": {
          "type": "string"
        },
        "iraNo": {
          "type": "string"
        },
        "policyNo": {
          "type": "string"
        },
        "riskId": {
          "type": "string"
        },
        "riskNote": {
          "type": "string"
        },
        "transmitalNo": {
          "type": "string"
        }
      },
      "title": "ValidatorDTO"
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      },
      "title": "View"
    },
    "XMLParams": {
      "type": "object",
      "properties": {
        "paramName": {
          "type": "string"
        },
        "paramType": {
          "type": "string"
        }
      },
      "title": "XMLParams"
    }
  }
}
